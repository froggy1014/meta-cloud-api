{
  "openapi": "3.0.0",
  "info": {
    "title": "Meta Cloud API - Templates",
    "version": "1.0.0",
    "description": "API documentation for WhatsApp message templates"
  },
  "tags": [
    {
      "name": "Messages",
      "description": "API documentation for WhatsApp messages"
    },
    {
      "name": "Templates",
      "description": "API documentation for WhatsApp message templates"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Meta Cloud API",
    "url": "https://developers.facebook.com/docs/whatsapp/cloud-api/reference/"
  },
  "paths": {
    "openapi": {
      "0": "3",
      "1": ".",
      "2": "0",
      "3": ".",
      "4": "0"
    },
    "info": {
      "title": "Meta Cloud API - Templates",
      "version": "1.0.0",
      "description": "API documentation for WhatsApp message templates"
    },
    "servers": {
      "0": {
        "url": "http://localhost:8080"
      }
    },
    "/messages/audio": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send an audio message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "link": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "recipient": {
                    "type": "number"
                  },
                  "replyMessageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/contacts": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send a contacts message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "addresses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "country_code": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "HOME",
                                  "WORK"
                                ]
                              }
                            }
                          }
                        },
                        "birthday": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "HOME",
                                  "WORK"
                                ]
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "object",
                          "required": [
                            "formatted_name"
                          ],
                          "properties": {
                            "formatted_name": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "middle_name": {
                              "type": "string"
                            },
                            "suffix": {
                              "type": "string"
                            },
                            "prefix": {
                              "type": "string"
                            }
                          }
                        },
                        "org": {
                          "type": "object",
                          "properties": {
                            "company": {
                              "type": "string"
                            },
                            "department": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          }
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "phone": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "CELL",
                                  "MAIN",
                                  "IPHONE",
                                  "HOME",
                                  "WORK"
                                ]
                              },
                              "wa_id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "urls": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "HOME",
                                  "WORK"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "recipient": {
                    "type": "number"
                  },
                  "replyMessageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/document": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send a document message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "string"
                          },
                          "filename": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "link": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "string"
                          },
                          "filename": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "recipient": {
                    "type": "number"
                  },
                  "replyMessageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/image": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send an image message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "link": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "recipient": {
                    "type": "number"
                  },
                  "replyMessageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/interactive": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send an interactive message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "object",
                    "required": [
                      "type",
                      "body",
                      "action"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "button",
                          "list",
                          "product",
                          "product_list"
                        ]
                      },
                      "body": {
                        "type": "object",
                        "required": [
                          "text"
                        ],
                        "properties": {
                          "text": {
                            "type": "string"
                          }
                        }
                      },
                      "footer": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "string"
                          }
                        }
                      },
                      "header": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "document",
                              "image",
                              "text",
                              "video"
                            ]
                          },
                          "document": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "link": {
                                "type": "string"
                              }
                            }
                          },
                          "image": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "link": {
                                "type": "string"
                              }
                            }
                          },
                          "text": {
                            "type": "string"
                          },
                          "video": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "link": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "action": {
                        "type": "object",
                        "properties": {
                          "button": {
                            "type": "string"
                          },
                          "buttons": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "reply"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "reply"
                                  ]
                                },
                                "reply": {
                                  "type": "object",
                                  "required": [
                                    "title",
                                    "id"
                                  ],
                                  "properties": {
                                    "title": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "catalog_id": {
                            "type": "string"
                          },
                          "product_retailer_id": {
                            "type": "string"
                          },
                          "sections": {
                            "type": "object",
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "product_items"
                                ],
                                "properties": {
                                  "product_items": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "product_retailer_id"
                                      ],
                                      "properties": {
                                        "product_retailer_id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "rows"
                                ],
                                "properties": {
                                  "rows": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "title"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "title": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "recipient": {
                    "type": "number"
                  },
                  "replyMessageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/location": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send a location message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "object",
                    "required": [
                      "longitude",
                      "latitude"
                    ],
                    "properties": {
                      "longitude": {
                        "type": "number"
                      },
                      "latitude": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  },
                  "recipient": {
                    "type": "number"
                  },
                  "replyMessageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/sticker": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send a sticker message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "link": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "recipient": {
                    "type": "number"
                  },
                  "replyMessageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/template": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send a template message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "object",
                    "required": [
                      "name",
                      "language"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "language": {
                        "type": "object",
                        "required": [
                          "policy",
                          "code"
                        ],
                        "properties": {
                          "policy": {
                            "type": "string",
                            "enum": [
                              "deterministic"
                            ]
                          },
                          "code": {
                            "type": "string"
                          }
                        }
                      },
                      "components": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "parameters"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "parameters": {
                                  "type": "array",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "text"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "text"
                                            ]
                                          },
                                          "text": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "currency"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "currency"
                                            ]
                                          },
                                          "currency": {
                                            "type": "object",
                                            "required": [
                                              "fallback_value",
                                              "code",
                                              "amount_1000"
                                            ],
                                            "properties": {
                                              "fallback_value": {
                                                "type": "string"
                                              },
                                              "code": {
                                                "type": "string"
                                              },
                                              "amount_1000": {
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "date_time"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "date_time"
                                            ]
                                          },
                                          "date_time": {
                                            "type": "object",
                                            "required": [
                                              "fallback_value"
                                            ],
                                            "properties": {
                                              "fallback_value": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "type"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "document",
                                              "image",
                                              "video"
                                            ]
                                          },
                                          "document": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "link": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "image": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "link": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "video": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "link": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "parameters",
                                "sub_type",
                                "index"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "button"
                                  ]
                                },
                                "parameters": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "payload"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "payload"
                                          ]
                                        },
                                        "payload": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "text"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "text"
                                          ]
                                        },
                                        "text": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "sub_type": {
                                  "type": "string",
                                  "enum": [
                                    "quick_reply",
                                    "url"
                                  ]
                                },
                                "index": {
                                  "type": "number",
                                  "enum": [
                                    0,
                                    1,
                                    2
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "recipient": {
                    "type": "number"
                  },
                  "replyMessageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/text": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send a text message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "object",
                    "required": [
                      "body"
                    ],
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "preview_url": {
                        "type": "boolean"
                      }
                    }
                  },
                  "recipient": {
                    "type": "number"
                  },
                  "replyMessageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/messages/video": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send a video message",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "body",
                  "recipient"
                ],
                "properties": {
                  "body": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The media object ID from Meta servers"
                          },
                          "caption": {
                            "type": "string",
                            "description": "Optional caption for the video"
                          },
                          "link": {
                            "type": "string",
                            "description": "Should not be used with id"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Should not be used with link"
                          },
                          "link": {
                            "type": "string",
                            "description": "The URL where the video is hosted"
                          },
                          "caption": {
                            "type": "string",
                            "description": "Optional caption for the video"
                          }
                        }
                      }
                    ]
                  },
                  "recipient": {
                    "type": "number",
                    "description": "The WhatsApp ID (phone number) of the recipient"
                  },
                  "replyMessageId": {
                    "type": "string",
                    "description": "Optional message ID to reply to"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Get a list of templates",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of templates to return"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by template name"
          },
          {
            "in": "query",
            "name": "language",
            "schema": {
              "$ref": "#/components/schemas/LanguagesEnum"
            },
            "description": "Filter by language"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "$ref": "#/components/schemas/CategoryEnum"
            },
            "description": "Filter by category"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/TemplateStatusEnum"
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TemplateResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Create a new template",
        "tags": [
          "Templates"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{templateId}": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Get a specific template by ID",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the template to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Template details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Template not found"
          }
        }
      },
      "put": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Update an existing template",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the template to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Template not found"
          }
        }
      },
      "delete": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Delete a template",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the template to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Template deleted successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Template not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoryEnum": {
        "type": "string",
        "enum": [
          "AUTHENTICATION",
          "MARKETING",
          "UTILITY"
        ]
      },
      "TemplateStatusEnum": {
        "type": "string",
        "enum": [
          "APPROVED",
          "PENDING",
          "REJECTED"
        ]
      },
      "HttpMethodsEnum": {
        "type": "string",
        "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE"
        ]
      },
      "MessageTypesEnum": {
        "type": "string",
        "enum": [
          "audio",
          "contacts",
          "document",
          "image",
          "interactive",
          "location",
          "sticker",
          "template",
          "text",
          "video"
        ]
      },
      "ParametersTypesEnum": {
        "type": "string",
        "enum": [
          "currency",
          "date_time",
          "document",
          "image",
          "text",
          "video",
          "payload"
        ]
      },
      "InteractiveTypesEnum": {
        "type": "string",
        "enum": [
          "button",
          "list",
          "product",
          "product_list"
        ]
      },
      "ButtonTypesEnum": {
        "type": "string",
        "enum": [
          "quick_reply",
          "url"
        ]
      },
      "ButtonPositionEnum": {
        "type": "number",
        "enum": [
          0,
          1,
          2
        ]
      },
      "ComponentTypesEnum": {
        "type": "string",
        "enum": [
          "HEADER",
          "BODY",
          "BUTTON",
          "FOOTER"
        ]
      },
      "WabaConfigEnum": {
        "type": "string",
        "enum": [
          "WA_BASE_URL",
          "M4D_APP_ID",
          "WA_PORT",
          "M4D_APP_SECRET",
          "WA_PHONE_NUMBER_ID",
          "WA_BUSINESS_ACCOUNT_ID",
          "CLOUD_API_VERSION",
          "CLOUD_API_ACCESS_TOKEN",
          "WEBHOOK_ENDPOINT",
          "WEBHOOK_VERIFICATION_TOKEN",
          "LISTENER_PORT",
          "MAX_RETRIES_AFTER_WAIT",
          "REQUEST_TIMEOUT",
          "DEBUG"
        ]
      },
      "ConversationTypesEnum": {
        "type": "string",
        "enum": [
          "business_initiated",
          "customer_initiated",
          "referral_conversion"
        ]
      },
      "StatusEnum": {
        "type": "string",
        "enum": [
          "delivered",
          "read",
          "sent"
        ]
      },
      "VideoMediaTypesEnum": {
        "type": "string",
        "enum": [
          "video/mp4",
          "video/3gp"
        ]
      },
      "StickerMediaTypesEnum": {
        "type": "string",
        "enum": [
          "image/webp"
        ]
      },
      "ImageMediaTypesEnum": {
        "type": "string",
        "enum": [
          "image/jpeg",
          "image/png"
        ]
      },
      "DocumentMediaTypesEnum": {
        "type": "string",
        "enum": [
          "text/plain",
          "application/pdf",
          "application/vnd.ms-powerpoint",
          "application/msword",
          "application/vnd.ms-excel",
          "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
          "application/vnd.openxmlformats-officedocument.presentationml.presentation",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ]
      },
      "AudioMediaTypesEnum": {
        "type": "string",
        "enum": [
          "audio/aac",
          "audio/mp4",
          "audio/mpeg",
          "audio/amr",
          "audio/ogg"
        ]
      },
      "WebhookTypesEnum": {
        "type": "string",
        "enum": [
          "audio",
          "button",
          "document",
          "text",
          "image",
          "interactive",
          "order",
          "sticker",
          "system",
          "unknown",
          "video"
        ]
      },
      "SystemChangeTypesEnum": {
        "type": "string",
        "enum": [
          "customer_changed_number",
          "customer_identity_changed"
        ]
      },
      "ReferralSourceTypesEnum": {
        "type": "string",
        "enum": [
          "ad",
          "post"
        ]
      },
      "RequestCodeMethodsEnum": {
        "type": "string",
        "enum": [
          "SMS",
          "VOICE"
        ]
      },
      "LanguagesEnum": {
        "type": "string",
        "enum": [
          "af",
          "sq",
          "ar",
          "az",
          "bn",
          "bg",
          "ca",
          "zh_CN",
          "zh_HK",
          "zh_TW",
          "hr",
          "cs",
          "da",
          "nl",
          "en",
          "en_GB",
          "en_US",
          "et",
          "fil",
          "fi",
          "fr",
          "ka",
          "de",
          "el",
          "gu",
          "ha",
          "he",
          "hi",
          "hu",
          "id",
          "ga",
          "it",
          "ja",
          "kn",
          "kk",
          "rw_RW",
          "ko",
          "ky_KG",
          "lo",
          "lv",
          "lt",
          "mk",
          "ms",
          "ml",
          "mr",
          "nb",
          "fa",
          "pl",
          "pt_BR",
          "pt_PT",
          "pa",
          "ro",
          "ru",
          "sr",
          "sk",
          "sl",
          "es",
          "es_AR",
          "es_ES",
          "es_MX",
          "sw",
          "sv",
          "ta",
          "te",
          "th",
          "tr",
          "uk",
          "ur",
          "uz",
          "vi",
          "zu"
        ]
      },
      "CurrencyCodesEnum": {
        "type": "string",
        "enum": [
          "AFN",
          "EUR",
          "ALL",
          "DZD",
          "USD",
          "AOA",
          "XCD",
          "ARS",
          "AMD",
          "AWG",
          "AUD",
          "AZN",
          "BSD",
          "BHD",
          "BDT",
          "BBD",
          "BYN",
          "BZD",
          "XOF",
          "BMD",
          "INR",
          "BTN",
          "BOB",
          "BOV",
          "BAM",
          "BWP",
          "NOK",
          "BRL",
          "BND",
          "BGN",
          "BIF",
          "CVE",
          "KHR",
          "XAF",
          "CAD",
          "KYD",
          "CLP",
          "CLF",
          "CNY",
          "COP",
          "COU",
          "KMF",
          "CDF",
          "NZD",
          "CRC",
          "HRK",
          "CUP",
          "CUC",
          "ANG",
          "CZK",
          "DKK",
          "DJF",
          "DOP",
          "EGP",
          "SVC",
          "ERN",
          "SZL",
          "ETB",
          "FKP",
          "FJD",
          "XPF",
          "GMD",
          "GEL",
          "GHS",
          "GIP",
          "GTQ",
          "GBP",
          "GNF",
          "GYD",
          "HTG",
          "HNL",
          "HKD",
          "HUF",
          "ISK",
          "IDR",
          "XDR",
          "IRR",
          "IQD",
          "ILS",
          "JMD",
          "JPY",
          "JOD",
          "KZT",
          "KES",
          "KPW",
          "KRW",
          "KWD",
          "KGS",
          "LAK",
          "LBP",
          "LSL",
          "ZAR",
          "LRD",
          "LYD",
          "CHF",
          "MOP",
          "MKD",
          "MGA",
          "MWK",
          "MYR",
          "MVR",
          "MRU",
          "MUR",
          "XUA",
          "MXN",
          "MXV",
          "MDL",
          "MNT",
          "MAD",
          "MZN",
          "MMK",
          "NAD",
          "NPR",
          "NIO",
          "NGN",
          "OMR",
          "PKR",
          "PAB",
          "PGK",
          "PYG",
          "PEN",
          "PHP",
          "PLN",
          "QAR",
          "RON",
          "RUB",
          "RWF",
          "SHP",
          "WST",
          "STN",
          "SAR",
          "RSD",
          "SCR",
          "SLL",
          "SGD",
          "XSU",
          "SBD",
          "SOS",
          "SSP",
          "LKR",
          "SDG",
          "SRD",
          "SEK",
          "CHE",
          "CHW",
          "SYP",
          "TWD",
          "TJS",
          "TZS",
          "THB",
          "TOP",
          "TTD",
          "TND",
          "TRY",
          "TMT",
          "UGX",
          "UAH",
          "AED",
          "USN",
          "UYU",
          "UYI",
          "UYW",
          "UZS",
          "VUV",
          "VES",
          "VND",
          "YER",
          "ZMW",
          "ZWL",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XTS",
          "XXX",
          "XAU",
          "XPD",
          "XPT",
          "XAG",
          "AFA",
          "FIM",
          "ALK",
          "ADP",
          "ESP",
          "FRF",
          "AOK",
          "AON",
          "AOR",
          "ARA",
          "ARP",
          "ARY",
          "RUR",
          "ATS",
          "AYM",
          "AZM",
          "BYB",
          "BYR",
          "BEC",
          "BEF",
          "BEL",
          "BOP",
          "BAD",
          "BRB",
          "BRC",
          "BRE",
          "BRN",
          "BRR",
          "BGJ",
          "BGK",
          "BGL",
          "BUK",
          "HRD",
          "CYP",
          "CSJ",
          "CSK",
          "ECS",
          "ECV",
          "GQE",
          "EEK",
          "XEU",
          "GEK",
          "DDM",
          "DEM",
          "GHC",
          "GHP",
          "GRD",
          "GNE",
          "GNS",
          "GWE",
          "GWP",
          "ITL",
          "ISJ",
          "IEP",
          "ILP",
          "ILR",
          "LAJ",
          "LVL",
          "LVR",
          "LSM",
          "ZAL",
          "LTL",
          "LTT",
          "LUC",
          "LUF",
          "LUL",
          "MGF",
          "MVQ",
          "MLF",
          "MTL",
          "MTP",
          "MRO",
          "MXP",
          "MZE",
          "MZM",
          "NLG",
          "NIC",
          "PEH",
          "PEI",
          "PES",
          "PLZ",
          "PTE",
          "ROK",
          "ROL",
          "STD",
          "CSD",
          "SKK",
          "SIT",
          "RHD",
          "ESA",
          "ESB",
          "SDD",
          "SDP",
          "SRG",
          "CHC",
          "TJR",
          "TPE",
          "TRL",
          "TMM",
          "UGS",
          "UGW",
          "UAK",
          "SUR",
          "USS",
          "UYN",
          "UYP",
          "VEB",
          "VEF",
          "VNC",
          "YDD",
          "YUD",
          "YUM",
          "YUN",
          "ZRN",
          "ZRZ",
          "ZMK",
          "ZWC",
          "ZWD",
          "ZWN",
          "ZWR",
          "XFO",
          "XRE",
          "XFU"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "message",
              "type",
              "code",
              "error_data",
              "error_subcode",
              "fbtrace_id"
            ],
            "properties": {
              "message": {
                "type": "string",
                "description": "Error message describing what went wrong"
              },
              "type": {
                "type": "string",
                "description": "Type of error that occurred"
              },
              "code": {
                "type": "integer",
                "description": "Error code"
              },
              "error_data": {
                "type": "object",
                "required": [
                  "messaging_product",
                  "details"
                ],
                "properties": {
                  "messaging_product": {
                    "type": "string",
                    "enum": [
                      "whatsapp"
                    ]
                  },
                  "details": {
                    "type": "string",
                    "description": "Additional error details"
                  }
                }
              },
              "error_subcode": {
                "type": "integer",
                "description": "Error subcode for more specific error classification"
              },
              "fbtrace_id": {
                "type": "string",
                "description": "Facebook trace ID for error tracking"
              }
            }
          }
        }
      },
      "MessageResponse": {
        "description": "Response from sending a WhatsApp message",
        "type": "object",
        "required": [
          "contacts",
          "messages"
        ],
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "string",
                  "description": "Phone number input"
                },
                "wa_id": {
                  "type": "string",
                  "description": "WhatsApp ID"
                }
              }
            }
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Message ID"
                }
              }
            }
          }
        }
      },
      "SuccessResponse": {
        "description": "Generic success response",
        "type": "object",
        "required": [
          "success"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the operation was successful"
          }
        }
      },
      "TemplateResponse": {
        "description": "Response from template operations",
        "type": "object",
        "required": [
          "id",
          "status",
          "language",
          "category",
          "name",
          "components"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Template ID"
          },
          "status": {
            "$ref": "#/components/schemas/TemplateStatusEnum"
          },
          "language": {
            "$ref": "#/components/schemas/LanguagesEnum"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryEnum"
          },
          "name": {
            "type": "string",
            "description": "Template name"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "format"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "HEADER"
                      ]
                    },
                    "format": {
                      "$ref": "#/components/schemas/MessageTypesEnum"
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 60
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "header_text": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "header_text_named_params": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "param_name": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "header_handle": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "BODY"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 1024
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "body_text": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "body_text_named_params": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "param_name": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "FOOTER"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 60
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text",
                    "phone_number"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "PHONE_NUMBER"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "phone_number": {
                      "type": "string",
                      "maxLength": 20
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text",
                    "url"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "URL"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "url": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "example": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "QUICK_REPLY"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "example"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "COPY_CODE"
                      ]
                    },
                    "example": {
                      "type": "string",
                      "maxLength": 15
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "FLOW"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "flow_id": {
                      "type": "string"
                    },
                    "flow_name": {
                      "type": "string"
                    },
                    "flow_json": {
                      "type": "string"
                    },
                    "flow_action": {
                      "type": "string",
                      "enum": [
                        "navigate",
                        "data_exchange"
                      ]
                    },
                    "navigate_screen": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "MPM"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "OTP"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "SPM"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "TemplateRequest": {
        "type": "object",
        "required": [
          "name",
          "language"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Template name"
          },
          "language": {
            "$ref": "#/components/schemas/LanguagesEnum"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryEnum"
          },
          "components": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "format"
                  ],
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ComponentTypesEnum"
                    },
                    "format": {
                      "$ref": "#/components/schemas/MessageTypesEnum"
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 60
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "header_text": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "header_text_named_params": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "param_name": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "header_handle": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ComponentTypesEnum"
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 1024
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "body_text": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "body_text_named_params": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "param_name": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ComponentTypesEnum"
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 60
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text",
                    "phone_number"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "PHONE_NUMBER"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "phone_number": {
                      "type": "string",
                      "maxLength": 20
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text",
                    "url"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "URL"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "url": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "example": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "QUICK_REPLY"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "example"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "COPY_CODE"
                      ]
                    },
                    "example": {
                      "type": "string",
                      "maxLength": 15
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "FLOW"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "flow_id": {
                      "type": "string"
                    },
                    "flow_name": {
                      "type": "string"
                    },
                    "flow_json": {
                      "type": "string"
                    },
                    "flow_action": {
                      "type": "string",
                      "enum": [
                        "navigate",
                        "data_exchange"
                      ]
                    },
                    "navigate_screen": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "MPM"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "OTP"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "SPM"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "AccessToken": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Bearer access token",
        "scheme": "Bearer"
      }
    }
  }
}