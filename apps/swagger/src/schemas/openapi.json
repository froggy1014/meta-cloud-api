{
  "openapi": "3.0.0",
  "info": {
    "title": "Meta Cloud API",
    "version": "1.0.0",
    "description": "API documentation for WhatsApp Cloud API"
  },
  "tags": [
    {
      "name": "Messages",
      "description": "API documentation for WhatsApp messages"
    },
    {
      "name": "Templates",
      "description": "API documentation for WhatsApp message templates"
    },
    {
      "name": "Media",
      "description": "API endpoints for uploading, retrieving, and managing WhatsApp media files"
    },
    {
      "name": "QR Codes",
      "description": "API endpoints for creating and managing WhatsApp QR codes"
    },
    {
      "name": "WABA",
      "description": "API endpoints for WhatsApp Business Account (WABA) management"
    },
    {
      "name": "Phone Numbers",
      "description": "API endpoints for managing and verifying WhatsApp business phone numbers"
    },
    {
      "name": "Registration",
      "description": "API endpoints for registering and deregistering WhatsApp phone numbers"
    },
    {
      "name": "Encryption",
      "description": "API endpoints for managing WhatsApp business encryption keys"
    },
    {
      "name": "Two-Step Verification",
      "description": "API endpoints for configuring two-step verification for WhatsApp business accounts"
    },
    {
      "name": "Flow",
      "description": "API endpoints for creating and managing WhatsApp flows, including flow metadata, assets, and validation"
    }
  ],
  "servers": [
    {
      "url": "https://graph.facebook.com/{version}",
      "variables": {
        "version": {
          "default": "v22.0",
          "description": "Meta Graph API version"
        }
      },
      "description": "Meta Cloud API production server"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Meta Cloud API",
    "url": "https://developers.facebook.com/docs/whatsapp/cloud-api/reference/"
  },
  "components": {
    "securitySchemes": {
      "AccessToken": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Bearer access token"
      },
      "PhoneNumberId": {
        "type": "apiKey",
        "in": "header",
        "name": "Phone-Number-Id",
        "description": "WhatsApp phone number ID (WA_PHONE_NUMBER_ID) - Required for most API operations"
      },
      "BusinessAccountId": {
        "type": "apiKey",
        "in": "header",
        "name": "Business-Account-Id",
        "description": "WhatsApp business account ID (WA_BUSINESS_ACCOUNT_ID) - Required for WABA and some template operations"
      },
      "ApiVersion": {
        "type": "apiKey",
        "in": "header",
        "name": "Api-Version",
        "description": "Meta Cloud API version (CLOUD_API_VERSION) - Optional, will use default if not provided"
      }
    },
    "schemas": {
      "CategoryEnum": {
        "type": "string",
        "enum": [
          "AUTHENTICATION",
          "MARKETING",
          "UTILITY"
        ]
      },
      "TemplateStatusEnum": {
        "type": "string",
        "enum": [
          "APPROVED",
          "PENDING",
          "REJECTED"
        ]
      },
      "HttpMethodsEnum": {
        "type": "string",
        "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE"
        ]
      },
      "MessageTypesEnum": {
        "type": "string",
        "enum": [
          "audio",
          "contacts",
          "document",
          "image",
          "interactive",
          "location",
          "sticker",
          "template",
          "text",
          "video"
        ]
      },
      "ParametersTypesEnum": {
        "type": "string",
        "enum": [
          "currency",
          "date_time",
          "document",
          "image",
          "text",
          "video",
          "payload"
        ]
      },
      "InteractiveTypesEnum": {
        "type": "string",
        "enum": [
          "button",
          "list",
          "product",
          "product_list"
        ]
      },
      "ButtonTypesEnum": {
        "type": "string",
        "enum": [
          "quick_reply",
          "url"
        ]
      },
      "ButtonPositionEnum": {
        "type": "number",
        "enum": [
          0,
          1,
          2
        ]
      },
      "ComponentTypesEnum": {
        "type": "string",
        "enum": [
          "HEADER",
          "BODY",
          "BUTTON",
          "FOOTER"
        ]
      },
      "WabaConfigEnum": {
        "type": "string",
        "enum": [
          "WA_BASE_URL",
          "M4D_APP_ID",
          "WA_PORT",
          "M4D_APP_SECRET",
          "WA_PHONE_NUMBER_ID",
          "WA_BUSINESS_ACCOUNT_ID",
          "CLOUD_API_VERSION",
          "CLOUD_API_ACCESS_TOKEN",
          "WEBHOOK_ENDPOINT",
          "WEBHOOK_VERIFICATION_TOKEN",
          "LISTENER_PORT",
          "MAX_RETRIES_AFTER_WAIT",
          "REQUEST_TIMEOUT",
          "DEBUG"
        ]
      },
      "ConversationTypesEnum": {
        "type": "string",
        "enum": [
          "business_initiated",
          "customer_initiated",
          "referral_conversion"
        ]
      },
      "StatusEnum": {
        "type": "string",
        "enum": [
          "delivered",
          "read",
          "sent"
        ]
      },
      "VideoMediaTypesEnum": {
        "type": "string",
        "enum": [
          "video/mp4",
          "video/3gp"
        ]
      },
      "StickerMediaTypesEnum": {
        "type": "string",
        "enum": [
          "image/webp"
        ]
      },
      "ImageMediaTypesEnum": {
        "type": "string",
        "enum": [
          "image/jpeg",
          "image/png"
        ]
      },
      "DocumentMediaTypesEnum": {
        "type": "string",
        "enum": [
          "text/plain",
          "application/pdf",
          "application/vnd.ms-powerpoint",
          "application/msword",
          "application/vnd.ms-excel",
          "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
          "application/vnd.openxmlformats-officedocument.presentationml.presentation",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ]
      },
      "AudioMediaTypesEnum": {
        "type": "string",
        "enum": [
          "audio/aac",
          "audio/mp4",
          "audio/mpeg",
          "audio/amr",
          "audio/ogg"
        ]
      },
      "WebhookTypesEnum": {
        "type": "string",
        "enum": [
          "audio",
          "button",
          "document",
          "text",
          "image",
          "interactive",
          "order",
          "sticker",
          "system",
          "unknown",
          "video"
        ]
      },
      "SystemChangeTypesEnum": {
        "type": "string",
        "enum": [
          "customer_changed_number",
          "customer_identity_changed"
        ]
      },
      "ReferralSourceTypesEnum": {
        "type": "string",
        "enum": [
          "ad",
          "post"
        ]
      },
      "RequestCodeMethodsEnum": {
        "type": "string",
        "enum": [
          "SMS",
          "VOICE"
        ]
      },
      "LanguagesEnum": {
        "type": "string",
        "enum": [
          "af",
          "sq",
          "ar",
          "az",
          "bn",
          "bg",
          "ca",
          "zh_CN",
          "zh_HK",
          "zh_TW",
          "hr",
          "cs",
          "da",
          "nl",
          "en",
          "en_GB",
          "en_US",
          "et",
          "fil",
          "fi",
          "fr",
          "ka",
          "de",
          "el",
          "gu",
          "ha",
          "he",
          "hi",
          "hu",
          "id",
          "ga",
          "it",
          "ja",
          "kn",
          "kk",
          "rw_RW",
          "ko",
          "ky_KG",
          "lo",
          "lv",
          "lt",
          "mk",
          "ms",
          "ml",
          "mr",
          "nb",
          "fa",
          "pl",
          "pt_BR",
          "pt_PT",
          "pa",
          "ro",
          "ru",
          "sr",
          "sk",
          "sl",
          "es",
          "es_AR",
          "es_ES",
          "es_MX",
          "sw",
          "sv",
          "ta",
          "te",
          "th",
          "tr",
          "uk",
          "ur",
          "uz",
          "vi",
          "zu"
        ]
      },
      "CurrencyCodesEnum": {
        "type": "string",
        "enum": [
          "AFN",
          "EUR",
          "ALL",
          "DZD",
          "USD",
          "AOA",
          "XCD",
          "ARS",
          "AMD",
          "AWG",
          "AUD",
          "AZN",
          "BSD",
          "BHD",
          "BDT",
          "BBD",
          "BYN",
          "BZD",
          "XOF",
          "BMD",
          "INR",
          "BTN",
          "BOB",
          "BOV",
          "BAM",
          "BWP",
          "NOK",
          "BRL",
          "BND",
          "BGN",
          "BIF",
          "CVE",
          "KHR",
          "XAF",
          "CAD",
          "KYD",
          "CLP",
          "CLF",
          "CNY",
          "COP",
          "COU",
          "KMF",
          "CDF",
          "NZD",
          "CRC",
          "HRK",
          "CUP",
          "CZK",
          "DKK",
          "DJF",
          "DOP",
          "EGP",
          "SVC",
          "ERN",
          "SZL",
          "ETB",
          "FKP",
          "FJD",
          "XPF",
          "GMD",
          "GEL",
          "GHS",
          "GIP",
          "GTQ",
          "GBP",
          "GNF",
          "GYD",
          "HTG",
          "HNL",
          "HKD",
          "HUF",
          "ISK",
          "IDR",
          "XDR",
          "IRR",
          "IQD",
          "ILS",
          "JMD",
          "JPY",
          "JOD",
          "KZT",
          "KES",
          "KPW",
          "KRW",
          "KWD",
          "KGS",
          "LAK",
          "LBP",
          "LSL",
          "ZAR",
          "LRD",
          "LYD",
          "CHF",
          "MOP",
          "MKD",
          "MGA",
          "MWK",
          "MYR",
          "MVR",
          "MRU",
          "MUR",
          "XUA",
          "MXN",
          "MXV",
          "MDL",
          "MNT",
          "MAD",
          "MZN",
          "MMK",
          "NAD",
          "NPR",
          "NIO",
          "NGN",
          "OMR",
          "PKR",
          "PAB",
          "PGK",
          "PYG",
          "PEN",
          "PHP",
          "PLN",
          "QAR",
          "RON",
          "RUB",
          "RWF",
          "SHP",
          "WST",
          "STN",
          "SAR",
          "RSD",
          "SCR",
          "SLL",
          "SGD",
          "XSU",
          "SBD",
          "SOS",
          "SSP",
          "LKR",
          "SDG",
          "SRD",
          "SEK",
          "CHE",
          "CHW",
          "SYP",
          "TWD",
          "TJS",
          "TZS",
          "THB",
          "TOP",
          "TTD",
          "TND",
          "TRY",
          "TMT",
          "UGX",
          "UAH",
          "AED",
          "USN",
          "UYU",
          "UYI",
          "UYW",
          "UZS",
          "VUV",
          "VES",
          "VND",
          "YER",
          "ZMW",
          "ZWL",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XTS",
          "XXX",
          "XAU",
          "XPD",
          "XPT",
          "XAG",
          "AFA",
          "FIM",
          "ALK",
          "ADP",
          "ESP",
          "FRF",
          "AOK",
          "AON",
          "AOR",
          "ARA",
          "ARP",
          "ARY",
          "RUR",
          "ATS",
          "AYM",
          "AZM",
          "BYB",
          "BYR",
          "BEC",
          "BEF",
          "BEL",
          "BOP",
          "BAD",
          "BRB",
          "BRC",
          "BRE",
          "BRN",
          "BRR",
          "BGJ",
          "BGK",
          "BGL",
          "BUK",
          "HRD",
          "CYP",
          "CSJ",
          "CSK",
          "ECS",
          "ECV",
          "GQE",
          "EEK",
          "XEU",
          "GEK",
          "DDM",
          "DEM",
          "GHC",
          "GHP",
          "GRD",
          "GNE",
          "GNS",
          "GWE",
          "GWP",
          "ITL",
          "ISJ",
          "IEP",
          "ILP",
          "ILR",
          "LAJ",
          "LVL",
          "LVR",
          "LSM",
          "ZAL",
          "LTL",
          "LTT",
          "LUC",
          "LUF",
          "LUL",
          "MGF",
          "MVQ",
          "MLF",
          "MTL",
          "MTP",
          "MRO",
          "MXP",
          "MZE",
          "MZM",
          "NLG",
          "NIC",
          "PEH",
          "PEI",
          "PES",
          "PLZ",
          "PTE",
          "ROK",
          "ROL",
          "STD",
          "CSD",
          "SKK",
          "SIT",
          "RHD",
          "ESA",
          "ESB",
          "SDD",
          "SDP",
          "SRG",
          "CHC",
          "TJR",
          "TPE",
          "TRL",
          "TMM",
          "UGS",
          "UGW",
          "UAK",
          "SUR",
          "USS",
          "UYN",
          "UYP",
          "VEB",
          "VEF",
          "VNC",
          "YDD",
          "YUD",
          "YUM",
          "YUN",
          "ZRN",
          "ZRZ",
          "ZMK",
          "ZWC",
          "ZWD",
          "ZWN",
          "ZWR",
          "XFO",
          "XRE",
          "XFU"
        ]
      },
      "DataLocalizationRegionEnum": {
        "type": "string",
        "enum": [
          "INDIA",
          "SINGAPORE",
          "UNITED_STATES",
          "JP",
          "SG",
          "KR",
          "DE",
          "CH",
          "GB",
          "BR",
          "BH",
          "ZA",
          "AE",
          "CA"
        ],
        "description": "Regions available for data localization"
      },
      "FlowStatusEnum": {
        "type": "string",
        "enum": [
          "DRAFT",
          "PUBLISHED",
          "THROTTLED",
          "BLOCKED",
          "DEPRECATED"
        ]
      },
      "FlowCategoryEnum": {
        "type": "string",
        "enum": [
          "SIGN_UP",
          "SIGN_IN",
          "APPOINTMENT_BOOKING",
          "LEAD_GENERATION",
          "CONTACT_US",
          "CUSTOMER_SUPPORT",
          "SURVEY",
          "OTHER"
        ]
      },
      "QualityScore": {
        "type": "object",
        "properties": {
          "score": {
            "type": "string",
            "enum": [
              "GREEN",
              "YELLOW",
              "RED",
              "NA"
            ],
            "description": "Quality rating of the phone number"
          }
        }
      },
      "Throughput": {
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "enum": [
              "STANDARD",
              "HIGH",
              "NOT_APPLICABLE"
            ],
            "description": "Throughput level for the phone number"
          }
        }
      },
      "HealthStatusEntity": {
        "type": "object",
        "properties": {
          "entity_type": {
            "type": "string",
            "description": "Type of the entity"
          },
          "id": {
            "type": "string",
            "description": "Entity identifier"
          },
          "can_send_message": {
            "type": "boolean",
            "description": "Whether messages can be sent"
          },
          "additional_info": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional information about the entity"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error_code": {
                  "type": "number",
                  "description": "Error code"
                },
                "error_description": {
                  "type": "string",
                  "description": "Description of the error"
                },
                "possible_solution": {
                  "type": "string",
                  "description": "Suggested solution for the error"
                }
              }
            }
          }
        }
      },
      "HealthStatus": {
        "type": "object",
        "properties": {
          "can_send_message": {
            "type": "boolean",
            "description": "Whether messages can be sent"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthStatusEntity"
            },
            "description": "List of health status entities"
          }
        }
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "display_phone_number": {
            "type": "string",
            "description": "The formatted phone number for display"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the phone number"
          },
          "quality_rating": {
            "type": "string",
            "enum": [
              "GREEN",
              "YELLOW",
              "RED",
              "NA"
            ],
            "description": "Quality rating of the phone number"
          },
          "verified_name": {
            "type": "string",
            "description": "Verified business name"
          },
          "account_mode": {
            "type": "string",
            "enum": [
              "LIVE",
              "SANDBOX"
            ],
            "description": "Current account mode"
          },
          "code_verification_status": {
            "type": "string",
            "enum": [
              "NOT_VERIFIED",
              "VERIFIED",
              "EXPIRED",
              "PENDING",
              "DELETED",
              "MIGRATED",
              "BANNED",
              "RESTRICTED",
              "RATE_LIMITED",
              "FLAGGED",
              "CONNECTED",
              "DISCONNECTED",
              "UNKNOWN",
              "UNVERIFIED"
            ],
            "description": "Current verification status"
          },
          "health_status": {
            "$ref": "#/components/schemas/HealthStatus"
          },
          "is_official_business_account": {
            "type": "boolean",
            "description": "Whether this is an official business account"
          },
          "is_on_biz_app": {
            "type": "boolean",
            "description": "Whether this number is on WhatsApp Business app"
          },
          "messaging_limit_tier": {
            "type": "string",
            "enum": [
              "TIER_50",
              "TIER_250",
              "TIER_1K",
              "TIER_10K",
              "TIER_100K",
              "TIER_UNLIMITED"
            ],
            "description": "Current messaging limit tier"
          },
          "platform_type": {
            "type": "string",
            "enum": [
              "CLOUD_API",
              "ON_PREMISE",
              "NOT_APPLICABLE"
            ],
            "description": "Type of platform"
          },
          "quality_score": {
            "$ref": "#/components/schemas/QualityScore"
          },
          "throughput": {
            "$ref": "#/components/schemas/Throughput"
          }
        },
        "required": [
          "display_phone_number",
          "id"
        ]
      },
      "PhoneNumbersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": "List of phone numbers"
          },
          "paging": {
            "type": "object",
            "properties": {
              "cursors": {
                "type": "object",
                "properties": {
                  "before": {
                    "type": "string",
                    "description": "Cursor for previous page"
                  },
                  "after": {
                    "type": "string",
                    "description": "Cursor for next page"
                  }
                }
              }
            }
          }
        }
      },
      "RequestCodeRequest": {
        "type": "object",
        "required": [
          "code_method",
          "language"
        ],
        "properties": {
          "code_method": {
            "type": "string",
            "enum": [
              "SMS",
              "VOICE"
            ],
            "$ref": "#/components/schemas/RequestCodeMethodsEnum",
            "description": "Method to receive verification code"
          },
          "language": {
            "type": "string",
            "$ref": "#/components/schemas/LanguagesEnum",
            "description": "Language for verification code"
          }
        }
      },
      "VerifyCodeRequest": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Verification code received"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the operation was successful"
          }
        },
        "description": "Generic success response",
        "required": [
          "success"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "QrCodeResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "QR code data"
          },
          "prefilled_message": {
            "type": "string",
            "description": "Prefilled message for QR code"
          },
          "deep_link_url": {
            "type": "string",
            "description": "Deep link URL for the QR code"
          },
          "qr_image_url": {
            "type": "string"
          }
        }
      },
      "QrCodesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QrCodeResponse"
            },
            "description": "List of QR codes"
          }
        }
      },
      "TemplateRequest": {
        "type": "object",
        "required": [
          "name",
          "language"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Template name"
          },
          "language": {
            "$ref": "#/components/schemas/LanguagesEnum"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryEnum"
          },
          "components": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "format"
                  ],
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ComponentTypesEnum"
                    },
                    "format": {
                      "$ref": "#/components/schemas/MessageTypesEnum"
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 60
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "header_text": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "header_text_named_params": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "param_name": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "header_handle": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ComponentTypesEnum"
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 1024
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "body_text": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "body_text_named_params": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "param_name": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ComponentTypesEnum"
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 60
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text",
                    "phone_number"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "PHONE_NUMBER"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "phone_number": {
                      "type": "string",
                      "maxLength": 20
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text",
                    "url"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "URL"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "url": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "example": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "QUICK_REPLY"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "example"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "COPY_CODE"
                      ]
                    },
                    "example": {
                      "type": "string",
                      "maxLength": 15
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "FLOW"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "flow_id": {
                      "type": "string"
                    },
                    "flow_name": {
                      "type": "string"
                    },
                    "flow_json": {
                      "type": "string"
                    },
                    "flow_action": {
                      "type": "string",
                      "enum": [
                        "navigate",
                        "data_exchange"
                      ]
                    },
                    "navigate_screen": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "MPM"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "OTP"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "SPM"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "TwoStepVerificationRequest": {
        "type": "object",
        "required": [
          "pin"
        ],
        "properties": {
          "pin": {
            "type": "string",
            "description": "PIN for two-step verification",
            "minLength": 6,
            "maxLength": 6
          }
        }
      },
      "WabaSubscription": {
        "type": "object",
        "properties": {
          "whatsapp_business_api_data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "WABA subscription ID"
              },
              "link": {
                "type": "string",
                "description": "Link to the WABA subscription"
              },
              "name": {
                "type": "string",
                "description": "Name of the WABA subscription"
              }
            }
          }
        }
      },
      "WabaSubscriptions": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WabaSubscription"
            },
            "description": "List of WABA subscriptions"
          }
        }
      },
      "FacebookError": {
        "description": "Error response from Meta Cloud API",
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "message",
              "type",
              "code",
              "fbtrace_id"
            ],
            "properties": {
              "message": {
                "type": "string",
                "description": "Error message",
                "example": "Invalid parameter"
              },
              "type": {
                "type": "string",
                "description": "Error type",
                "example": "OAuthException"
              },
              "code": {
                "type": "integer",
                "description": "Error code",
                "example": 100
              },
              "error_data": {
                "type": "object",
                "description": "Additional error data for WhatsApp errors",
                "required": [
                  "messaging_product",
                  "details"
                ],
                "properties": {
                  "messaging_product": {
                    "type": "string",
                    "enum": [
                      "whatsapp"
                    ],
                    "example": "whatsapp"
                  },
                  "details": {
                    "type": "string",
                    "example": "Message failed to send"
                  }
                }
              },
              "error_subcode": {
                "type": "integer",
                "description": "Optional error subcode",
                "example": 2018001
              },
              "fbtrace_id": {
                "type": "string",
                "description": "Meta API trace ID",
                "example": "XYZ123abc"
              }
            }
          }
        }
      },
      "ResponseData": {
        "description": "Generic data response wrapper",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "Response data payload"
          }
        }
      },
      "EncryptionPublicKeyResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "business_public_key": {
                "type": "string"
              },
              "business_public_key_signature_status": {
                "type": "string",
                "enum": [
                  "VALID",
                  "MISMATCH"
                ]
              }
            }
          }
        }
      },
      "FlowValidationErrorPointer": {
        "type": "object",
        "properties": {
          "line_start": {
            "type": "integer",
            "example": 10
          },
          "line_end": {
            "type": "integer",
            "example": 10
          },
          "column_start": {
            "type": "integer",
            "example": 21
          },
          "column_end": {
            "type": "integer",
            "example": 34
          },
          "path": {
            "type": "string",
            "example": "screens[0].layout.children[0].type"
          }
        }
      },
      "FlowValidationError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "INVALID_PROPERTY_VALUE"
          },
          "error_type": {
            "type": "string",
            "example": "FLOW_JSON_ERROR"
          },
          "message": {
            "type": "string",
            "example": "Invalid value found for property 'type'."
          },
          "line_start": {
            "type": "integer",
            "example": 10
          },
          "line_end": {
            "type": "integer",
            "example": 10
          },
          "column_start": {
            "type": "integer",
            "example": 21
          },
          "column_end": {
            "type": "integer",
            "example": 34
          },
          "pointers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowValidationErrorPointer"
            }
          }
        }
      },
      "Flow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "flow-1"
          },
          "name": {
            "type": "string",
            "example": "My first flow"
          },
          "status": {
            "$ref": "#/components/schemas/FlowStatusEnum"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowCategoryEnum"
            }
          },
          "validation_errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowValidationError"
            }
          }
        }
      },
      "PaginationCursors": {
        "type": "object",
        "properties": {
          "before": {
            "type": "string",
            "example": "QVFIUnhCZAHF0NVNtYm1ER3JORDVhc1RhaWw2Mk9tUDctNFNhOUZAxcHBUVUtTMlBtZAl96MWJFWnh1V3o3OWJ2UHowZA2xSbTZAZAd0ZADVGFmQ1kzbXNoeTFOSE9R"
          },
          "after": {
            "type": "string",
            "example": "QVFIUnpHeEstLVlONng5RlNpTmVSbm5uMlJSbS1oRjRnSjFSNTFHMHpDZAmppT1J0TWxPWG5vTW9HeU1xVHdwRWpGMkxSQ0RZARnRvblVPTUFaRi1Vc0wyVXFR"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "cursors": {
            "$ref": "#/components/schemas/PaginationCursors"
          },
          "next": {
            "type": "string",
            "example": "https://graph.facebook.com/v22.0/392103643975987/flows?pretty=1&limit=25&after=QVFIUnpHeEstLVlONng5RlNpTmVSbm5uMlJSbS1oRjRnSjFSNTFHMHpDZAmppT1J0TWxPWG5vTW9HeU1xVHdwRWpGMkxSQ0RZARnRvblVPTUFaRi1Vc0wyVXFR"
          }
        }
      },
      "FlowsListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flow"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "FlowAsset": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "flow.json"
          },
          "asset_type": {
            "type": "string",
            "example": "FLOW_JSON"
          },
          "download_url": {
            "type": "string",
            "example": "https://scontent.xx.fbcdn.net/m1/v/t0.57323-24/An_Hq0jnfJ..."
          }
        }
      },
      "FlowAssetsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowAsset"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "FlowPreview": {
        "type": "object",
        "properties": {
          "preview_url": {
            "type": "string",
            "example": "https://business.facebook.com/wa/manage/flows/550.../preview/?token=b9d6...."
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-21T11:18:09+0000"
          }
        }
      },
      "FlowPreviewResponse": {
        "type": "object",
        "properties": {
          "preview": {
            "$ref": "#/components/schemas/FlowPreview"
          },
          "id": {
            "type": "string",
            "example": "flow-1"
          }
        }
      },
      "FlowMigrationResult": {
        "type": "object",
        "properties": {
          "source_name": {
            "type": "string",
            "example": "appointment-booking"
          },
          "source_id": {
            "type": "string",
            "example": "1234"
          },
          "migrated_id": {
            "type": "string",
            "example": "5678"
          }
        }
      },
      "FlowMigrationFailure": {
        "type": "object",
        "properties": {
          "source_name": {
            "type": "string",
            "example": "lead-gen"
          },
          "error_code": {
            "type": "string",
            "example": "4233041"
          },
          "error_message": {
            "type": "string",
            "example": "Flows Migration Error: Flow with the same name exists in destination WABA."
          }
        }
      },
      "FlowMigrationResponse": {
        "type": "object",
        "properties": {
          "migrated_flows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowMigrationResult"
            }
          },
          "failed_flows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowMigrationFailure"
            }
          }
        }
      },
      "CreateFlowResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "flow-1"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "validation_errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowValidationError"
            }
          }
        }
      },
      "UpdateFlowJsonResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "validation_errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowValidationError"
            }
          }
        }
      },
      "MediaResponse": {
        "description": "Response from fetching media details",
        "type": "object",
        "properties": {
          "messaging_product": {
            "type": "string",
            "enum": [
              "whatsapp"
            ]
          },
          "url": {
            "type": "string",
            "description": "URL to download the media"
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of the media"
          },
          "sha256": {
            "type": "string",
            "description": "SHA256 hash of the media"
          },
          "file_size": {
            "type": "integer",
            "description": "Size of the media file in bytes"
          },
          "id": {
            "type": "string",
            "description": "Media ID"
          }
        }
      },
      "UploadMediaResponse": {
        "description": "Response from uploading media",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Media ID"
          }
        }
      },
      "MessageResponse": {
        "description": "Response from sending a WhatsApp message",
        "type": "object",
        "required": [
          "messaging_product",
          "contacts",
          "messages"
        ],
        "properties": {
          "messaging_product": {
            "type": "string",
            "enum": [
              "whatsapp"
            ],
            "description": "The messaging service used"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "input",
                "wa_id"
              ],
              "properties": {
                "input": {
                  "type": "string",
                  "description": "Phone number input",
                  "example": "821089791169"
                },
                "wa_id": {
                  "type": "string",
                  "description": "WhatsApp ID",
                  "example": "821089791169"
                }
              }
            }
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Message ID",
                  "example": "wamid.HBgMODIxMDg5NzkxMTY5FQIAERgSOTEzMzVBQzQ1M0JDRDUyNkRGAA=="
                }
              }
            }
          }
        }
      },
      "TemplateResponse": {
        "description": "Response from template operations",
        "type": "object",
        "required": [
          "id",
          "status",
          "language",
          "category",
          "name",
          "components"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Template ID"
          },
          "status": {
            "$ref": "#/components/schemas/TemplateStatusEnum"
          },
          "language": {
            "$ref": "#/components/schemas/LanguagesEnum"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryEnum"
          },
          "name": {
            "type": "string",
            "description": "Template name"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "type",
                    "format"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "HEADER"
                      ]
                    },
                    "format": {
                      "$ref": "#/components/schemas/MessageTypesEnum"
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 60
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "header_text": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "header_text_named_params": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "param_name": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "header_handle": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "BODY"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 1024
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "body_text": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "body_text_named_params": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "param_name": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "FOOTER"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 60
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text",
                    "phone_number"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "PHONE_NUMBER"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "phone_number": {
                      "type": "string",
                      "maxLength": 20
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text",
                    "url"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "URL"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "url": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "example": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "QUICK_REPLY"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "example"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "COPY_CODE"
                      ]
                    },
                    "example": {
                      "type": "string",
                      "maxLength": 15
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "FLOW"
                      ]
                    },
                    "text": {
                      "type": "string",
                      "maxLength": 25
                    },
                    "flow_id": {
                      "type": "string"
                    },
                    "flow_name": {
                      "type": "string"
                    },
                    "flow_json": {
                      "type": "string"
                    },
                    "flow_action": {
                      "type": "string",
                      "enum": [
                        "navigate",
                        "data_exchange"
                      ]
                    },
                    "navigate_screen": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "MPM"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "OTP"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "SPM"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "TemplatesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            }
          },
          "paging": {
            "type": "object",
            "properties": {
              "cursors": {
                "type": "object",
                "properties": {
                  "before": {
                    "type": "string"
                  },
                  "after": {
                    "type": "string"
                  }
                }
              },
              "next": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/{businessNumberId}/whatsapp_business_encryption": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Get encryption public key",
        "tags": [
          "Encryption"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business phone number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved encryption public key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptionPublicKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "404": {
            "description": "Public key not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Set encryption public key",
        "tags": [
          "Encryption"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business phone number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "business_public_key"
                ],
                "properties": {
                  "business_public_key": {
                    "type": "string",
                    "description": "The business public key for encryption"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully set encryption public key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{waba-id}/flows": {
      "get": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "List Flows",
        "description": "List flows for a WhatsApp Business Account",
        "operationId": "listFlows",
        "parameters": [
          {
            "in": "path",
            "name": "waba-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the WhatsApp Business Account"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Flow"
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "cursors": {
                          "$ref": "#/components/schemas/PaginationCursors"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "List Flows": {
                    "value": {
                      "data": [
                        {
                          "categories": [
                            "SIGN_UP"
                          ],
                          "id": "flow-1",
                          "name": "my first flow",
                          "status": "DRAFT",
                          "validation_errors": []
                        },
                        {
                          "categories": [
                            "SIGN_UP",
                            "SIGN_IN"
                          ],
                          "id": "flow-2",
                          "name": "my second flow",
                          "status": "DRAFT",
                          "validation_errors": [
                            {
                              "column_end": 30,
                              "column_start": 17,
                              "error": "INVALID_PROPERTY",
                              "error_type": "JSON_SCHEMA_ERROR",
                              "line_end": 46,
                              "line_start": 46,
                              "message": "The property \"initial-text\" cannot be specified at \"$root/screens/0/layout/children/2/children/0\"."
                            }
                          ]
                        },
                        {
                          "categories": [
                            "CONTACT_US"
                          ],
                          "id": "flow-3",
                          "name": "another flow",
                          "status": "PUBLISHED",
                          "validation_errors": []
                        }
                      ],
                      "paging": {
                        "cursors": {
                          "after": "QVFIUnZAWV...",
                          "before": "QVFIUnpKT..."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "Create Flow",
        "description": "Create a new flow for a WhatsApp Business Account",
        "operationId": "createFlow",
        "parameters": [
          {
            "in": "path",
            "name": "waba-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the WhatsApp Business Account"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "categories"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Flow Name",
                    "description": "Flow name"
                  },
                  "categories": {
                    "type": "string",
                    "example": "[\"OTHER\"]",
                    "description": "A list of Flow categories encoded as JSON string"
                  },
                  "endpoint_uri": {
                    "type": "string",
                    "example": "https://example.com",
                    "description": "The URL of the WA Flow Endpoint"
                  },
                  "clone_flow_id": {
                    "type": "string",
                    "example": "flow-123",
                    "description": "ID of source Flow to clone"
                  },
                  "flow_json": {
                    "type": "string",
                    "description": "Flow's JSON encoded as string",
                    "example": "{\"version\":\"5.0\",\"screens\":[{\"id\":\"WELCOME_SCREEN\"}]}"
                  },
                  "publish": {
                    "type": "boolean",
                    "description": "Indicates whether Flow should also get published",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFlowResponse"
                },
                "examples": {
                  "Create Flow": {
                    "value": {
                      "id": "flow-1",
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{waba-id}/migrate_flows": {
      "post": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "Migrate Flows",
        "description": "Migrate Flows from one WhatsApp Business Account to another",
        "operationId": "migrateFlows",
        "parameters": [
          {
            "in": "path",
            "name": "waba-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The destination WhatsApp Business Account ID"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "source_waba_id"
                ],
                "properties": {
                  "source_waba_id": {
                    "type": "string",
                    "description": "Source WhatsApp Business Account ID",
                    "example": "102290129340398"
                  },
                  "source_flow_names": {
                    "type": "string",
                    "description": "List of specific Flow names to migrate (up to 100) as JSON string",
                    "example": "[\"appointment-booking\", \"lead-gen\"]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowMigrationResponse"
                },
                "examples": {
                  "Migrate Flows": {
                    "value": {
                      "failed_flows": [
                        {
                          "error_code": "4233041",
                          "error_message": "Flows Migration Error: Flow name not found in source WABA.",
                          "source_name": "leadgen"
                        }
                      ],
                      "migrated_flows": [
                        {
                          "migrated_id": "dest-flow-1",
                          "source_id": "source-flow-1",
                          "source_name": "appointment"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{flow-id}": {
      "get": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "Get Flow",
        "description": "Get details of a specific flow",
        "operationId": "getFlow",
        "parameters": [
          {
            "in": "path",
            "name": "flow-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the flow"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,name,categories,preview,status,validation_errors,json_version"
            },
            "description": "Return specific fields in the response"
          },
          {
            "name": "date_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "U"
            },
            "description": "Returns date as unix timestamp in seconds"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flow"
                },
                "examples": {
                  "Get Flow": {
                    "value": {
                      "application": {
                        "id": "app-1",
                        "link": "https://www.facebook.com/games/?app_id=app-1",
                        "name": "My Awesome App"
                      },
                      "categories": [
                        "OTHER"
                      ],
                      "data_api_version": "3.0",
                      "data_channel_uri": "https://example.com",
                      "health_status": {
                        "can_send_message": "BLOCKED",
                        "entities": [
                          {
                            "can_send_message": "AVAILABLE",
                            "entity_type": "FLOW",
                            "id": "flow-1"
                          }
                        ]
                      },
                      "id": "flow-1",
                      "json_version": "2.1",
                      "name": "my first flow",
                      "preview": {
                        "expires_at": "2023-05-21T11:18:09+0000",
                        "preview_url": "https://business.facebook.com/wa/manage/flows/55000..../preview/?token=b9d6....."
                      },
                      "status": "DRAFT",
                      "validation_errors": [],
                      "whatsapp_business_account": {
                        "business_type": "ent",
                        "id": "waba-1",
                        "message_template_namespace": "namespace-1",
                        "name": "My Awesome WABA",
                        "timezone_id": "54"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "Update Flow Metadata",
        "description": "Update metadata of a specific flow",
        "operationId": "updateFlowMetadata",
        "parameters": [
          {
            "in": "path",
            "name": "flow-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the flow"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New Flow Name",
                    "description": "Flow name"
                  },
                  "categories": {
                    "type": "string",
                    "example": "[\"OTHER\"]",
                    "description": "A list of Flow categories encoded as JSON string"
                  },
                  "endpoint_uri": {
                    "type": "string",
                    "example": "https://example.com",
                    "description": "The URL of the WA Flow Endpoint"
                  },
                  "application_id": {
                    "type": "string",
                    "example": "1234567890",
                    "description": "The ID of the Meta application which will be connected to the Flow"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "examples": {
                  "Update Flow Metadata": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "Delete Flow",
        "description": "Delete a specific flow (only drafts can be deleted)",
        "operationId": "deleteFlow",
        "parameters": [
          {
            "in": "path",
            "name": "flow-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the flow"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "examples": {
                  "Delete Flow": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{flow-id}/publish": {
      "post": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "Publish Flow",
        "description": "Updates the status of the Flow to PUBLISHED",
        "operationId": "publishFlow",
        "parameters": [
          {
            "in": "path",
            "name": "flow-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the flow"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "examples": {
                  "Publish Flow": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{flow-id}/deprecate": {
      "post": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "Deprecate Flow",
        "description": "Mark a published Flow as deprecated",
        "operationId": "deprecateFlow",
        "parameters": [
          {
            "in": "path",
            "name": "flow-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the flow"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "examples": {
                  "Deprecate Flow": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{flow-id}/assets": {
      "get": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "List Assets",
        "description": "Returns all assets attached to a specific flow",
        "operationId": "listAssets",
        "parameters": [
          {
            "in": "path",
            "name": "flow-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the flow"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "flow.json"
                          },
                          "asset_type": {
                            "type": "string",
                            "example": "FLOW_JSON"
                          },
                          "download_url": {
                            "type": "string",
                            "example": "https://scontent.xx.fbcdn.net/m1/v/t0.57323-24/An_Hq0jnfJ..."
                          }
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "cursors": {
                          "type": "object",
                          "properties": {
                            "after": {
                              "type": "string"
                            },
                            "before": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "List Assets": {
                    "value": {
                      "data": [
                        {
                          "asset_type": "FLOW_JSON",
                          "download_url": "https://scontent.xx.fbcdn.net/m1/v/t0.57323-24/An_Hq0jnfJ...",
                          "name": "flow.json"
                        }
                      ],
                      "paging": {
                        "cursors": {
                          "after": "QVFI...",
                          "before": "QVFI..."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "tags": [
          "Flow"
        ],
        "summary": "Update Flow JSON",
        "description": "Update Flow JSON for a specified Flow",
        "operationId": "updateFlowJson",
        "parameters": [
          {
            "in": "path",
            "name": "flow-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the flow"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "asset_type",
                  "file",
                  "name"
                ],
                "properties": {
                  "asset_type": {
                    "type": "string",
                    "enum": [
                      "FLOW_JSON"
                    ],
                    "example": "FLOW_JSON"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File with the JSON content (size limited to 10 MB)"
                  },
                  "name": {
                    "type": "string",
                    "example": "flow.json",
                    "description": "Flow asset name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "examples": {
                  "Update Flow JSON": {
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{mediaId}": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Get media by ID",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mediaId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the media"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved media",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Delete media",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mediaId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the media to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted media",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{businessNumberId}/media": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Upload media",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the WhatsApp Business phone number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "messaging_product": {
                    "type": "string",
                    "enum": [
                      "whatsapp"
                    ],
                    "default": "whatsapp"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully uploaded media",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadMediaResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{mediaUrl}": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Download media",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mediaUrl",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The URL of the media to download"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully downloaded media",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{businessNumberId}/messages": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Send a message (unified endpoint supporting all message types)",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business phone number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "messaging_product",
                  "type",
                  "to"
                ],
                "properties": {
                  "messaging_product": {
                    "type": "string",
                    "description": "The messaging service being used",
                    "enum": [
                      "whatsapp"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of message to send",
                    "enum": [
                      "audio",
                      "contacts",
                      "document",
                      "image",
                      "interactive",
                      "location",
                      "sticker",
                      "template",
                      "text",
                      "video"
                    ]
                  },
                  "to": {
                    "type": "number",
                    "description": "The WhatsApp ID (phone number) of the recipient"
                  },
                  "replyMessageId": {
                    "type": "string",
                    "description": "Optional message ID to reply to"
                  },
                  "audio": {
                    "type": "object",
                    "description": "Audio message properties (required when type is 'audio')",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The media object ID from Meta servers"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "link": {
                            "type": "string",
                            "description": "HTTP/HTTPS URL of the audio file. Content-Type must be audio/aac, audio/mp4, audio/mpeg, audio/amr, or audio/ogg",
                            "example": "https://example.com/audio.mp3"
                          }
                        }
                      }
                    ]
                  },
                  "contacts": {
                    "type": "array",
                    "description": "Contacts message properties (required when type is 'contacts')",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "object",
                          "required": [
                            "formatted_name"
                          ],
                          "properties": {
                            "formatted_name": {
                              "type": "string",
                              "example": "John Doe"
                            },
                            "first_name": {
                              "type": "string",
                              "example": "John"
                            },
                            "last_name": {
                              "type": "string",
                              "example": "Doe"
                            }
                          }
                        }
                      }
                    }
                  },
                  "document": {
                    "type": "object",
                    "description": "Document message properties (required when type is 'document')",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The media object ID from Meta servers"
                          },
                          "caption": {
                            "type": "string"
                          },
                          "filename": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "link": {
                            "type": "string",
                            "description": "HTTP/HTTPS URL of the document",
                            "example": "https://example.com/document.pdf"
                          },
                          "caption": {
                            "type": "string"
                          },
                          "filename": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "image": {
                    "type": "object",
                    "description": "Image message properties (required when type is 'image')",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The media object ID from Meta servers"
                          },
                          "caption": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "link": {
                            "type": "string",
                            "description": "HTTP/HTTPS URL of the image",
                            "example": "https://example.com/image.jpg"
                          },
                          "caption": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "interactive": {
                    "type": "object",
                    "description": "Interactive message properties (required when type is 'interactive')",
                    "required": [
                      "type",
                      "body",
                      "action"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "button",
                          "list",
                          "product",
                          "product_list"
                        ]
                      },
                      "body": {
                        "type": "object",
                        "required": [
                          "text"
                        ],
                        "properties": {
                          "text": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "location": {
                    "type": "object",
                    "description": "Location message properties (required when type is 'location')",
                    "required": [
                      "longitude",
                      "latitude"
                    ],
                    "properties": {
                      "longitude": {
                        "type": "number",
                        "example": -122.1484785
                      },
                      "latitude": {
                        "type": "number",
                        "example": 37.4847285
                      },
                      "name": {
                        "type": "string",
                        "example": "Meta Headquarters"
                      },
                      "address": {
                        "type": "string",
                        "example": "1 Hacker Way, Menlo Park, CA 94025"
                      }
                    }
                  },
                  "sticker": {
                    "type": "object",
                    "description": "Sticker message properties (required when type is 'sticker')",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The media object ID from Meta servers"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "link": {
                            "type": "string",
                            "description": "HTTP/HTTPS URL of the sticker",
                            "example": "https://example.com/sticker.webp"
                          }
                        }
                      }
                    ]
                  },
                  "template": {
                    "type": "object",
                    "description": "Template message properties (required when type is 'template')",
                    "required": [
                      "name",
                      "language"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "language": {
                        "type": "object",
                        "required": [
                          "policy",
                          "code"
                        ],
                        "properties": {
                          "policy": {
                            "type": "string",
                            "enum": [
                              "deterministic"
                            ]
                          },
                          "code": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "text": {
                    "type": "object",
                    "description": "Text message properties (required when type is 'text')",
                    "required": [
                      "body"
                    ],
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "preview_url": {
                        "type": "boolean"
                      }
                    }
                  },
                  "video": {
                    "type": "object",
                    "description": "Video message properties (required when type is 'video')",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The media object ID from Meta servers"
                          },
                          "caption": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "link"
                        ],
                        "properties": {
                          "link": {
                            "type": "string",
                            "description": "HTTP/HTTPS URL of the video",
                            "example": "https://example.com/video.mp4"
                          },
                          "caption": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "examples": {
                "text-message": {
                  "summary": "Text Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "text",
                    "to": 821089791169,
                    "text": {
                      "body": "Hello, this is a text message",
                      "preview_url": false
                    }
                  }
                },
                "image-message": {
                  "summary": "Image Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "image",
                    "to": 821089791169,
                    "image": {
                      "link": "https://www.pngplay.com/wp-content/uploads/8/Whatsapp-Logo-Download-Free-PNG.png",
                      "caption": "Check out this image!"
                    }
                  }
                },
                "audio-message": {
                  "summary": "Audio Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "audio",
                    "to": 821089791169,
                    "audio": {
                      "link": "https://onlinetestcase.com/wp-content/uploads/2023/06/100-KB-MP3.mp3"
                    }
                  }
                },
                "video-message": {
                  "summary": "Video Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "video",
                    "to": 821089791169,
                    "video": {
                      "link": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                      "caption": "Check out this video!"
                    }
                  }
                },
                "document-message": {
                  "summary": "Document Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "document",
                    "to": 821089791169,
                    "document": {
                      "link": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
                      "caption": "Important document",
                      "filename": "report.pdf"
                    }
                  }
                },
                "sticker-message": {
                  "summary": "Sticker Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "sticker",
                    "to": 821089791169,
                    "sticker": {
                      "link": "https://mathiasbynens.be/demo/animated-webp-supported.webp"
                    }
                  }
                },
                "location-message": {
                  "summary": "Location Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "location",
                    "to": 821089791169,
                    "location": {
                      "longitude": -122.1484785,
                      "latitude": 37.4847285,
                      "name": "Meta Headquarters",
                      "address": "1 Hacker Way, Menlo Park, CA 94025"
                    }
                  }
                },
                "contacts-message": {
                  "summary": "Contacts Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "contacts",
                    "to": 821089791169,
                    "contacts": [
                      {
                        "addresses": [
                          {
                            "street": "1 Lucky Shrub Way",
                            "city": "Menlo Park",
                            "state": "CA",
                            "zip": "94025",
                            "country": "United States",
                            "country_code": "US",
                            "type": "Office"
                          }
                        ],
                        "emails": [
                          {
                            "email": "bjohnson@luckyshrub.com",
                            "type": "Work"
                          }
                        ],
                        "name": {
                          "formatted_name": "Barbara J. Johnson",
                          "first_name": "Barbara",
                          "last_name": "Johnson",
                          "middle_name": "Joana",
                          "suffix": "Esq.",
                          "prefix": "Dr."
                        },
                        "org": {
                          "company": "Lucky Shrub",
                          "department": "Legal",
                          "title": "Lead Counsel"
                        },
                        "phones": [
                          {
                            "phone": "+16505559999",
                            "type": "Landline"
                          },
                          {
                            "phone": "+19175559999",
                            "type": "Mobile",
                            "wa_id": "19175559999"
                          }
                        ],
                        "urls": [
                          {
                            "url": "https://www.luckyshrub.com",
                            "type": "Company"
                          }
                        ]
                      }
                    ]
                  }
                },
                "template-message": {
                  "summary": "Template Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "template",
                    "to": 821089791169,
                    "template": {
                      "name": "hello_world",
                      "language": {
                        "code": "en_US"
                      }
                    }
                  }
                },
                "interactive-reply-buttons-message": {
                  "summary": "Interactive Reply Buttons Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "interactive",
                    "to": 821089791169,
                    "interactive": {
                      "type": "button",
                      "header": {
                        "type": "text",
                        "text": "Workshop Details"
                      },
                      "body": {
                        "text": "Hi Pablo! Your gardening workshop is scheduled for 9am tomorrow. Use the buttons if you need to reschedule. Thank you!"
                      },
                      "footer": {
                        "text": "Lucky Shrub: Your gateway to succulents!™"
                      },
                      "action": {
                        "buttons": [
                          {
                            "type": "reply",
                            "reply": {
                              "id": "change-button",
                              "title": "Change"
                            }
                          },
                          {
                            "type": "reply",
                            "reply": {
                              "id": "cancel-button",
                              "title": "Cancel"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "interactive-list-message": {
                  "summary": "Interactive List Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "interactive",
                    "to": 821089791169,
                    "interactive": {
                      "type": "list",
                      "header": {
                        "type": "text",
                        "text": "Choose Shipping Option"
                      },
                      "body": {
                        "text": "Which shipping option do you prefer?"
                      },
                      "footer": {
                        "text": "Lucky Shrub: Your gateway to succulents™"
                      },
                      "action": {
                        "button": "Shipping Options",
                        "sections": [
                          {
                            "title": "I want it ASAP!",
                            "rows": [
                              {
                                "id": "priority_express",
                                "title": "Priority Mail Express",
                                "description": "Next Day to 2 Days"
                              },
                              {
                                "id": "priority_mail",
                                "title": "Priority Mail",
                                "description": "1–3 Days"
                              }
                            ]
                          },
                          {
                            "title": "I can wait a bit",
                            "rows": [
                              {
                                "id": "usps_ground_advantage",
                                "title": "USPS Ground Advantage",
                                "description": "2–5 Days"
                              },
                              {
                                "id": "media_mail",
                                "title": "Media Mail",
                                "description": "2–8 Days"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "interactive-cta-url-message": {
                  "summary": "Interactive Call-to-Action URL Button Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "interactive",
                    "to": 821089791169,
                    "interactive": {
                      "type": "cta_url",
                      "header": {
                        "type": "text",
                        "text": "Available Dates"
                      },
                      "body": {
                        "text": "Tap the button below to see available dates."
                      },
                      "footer": {
                        "text": "Dates subject to change."
                      },
                      "action": {
                        "name": "cta_url",
                        "parameters": {
                          "display_text": "See Dates",
                          "url": "https://www.luckyshrub.com?clickID=kqDGWd24Q5TRwoEQTICY7W1JKoXvaZOXWAS7h1P76s0R7Paec4"
                        }
                      }
                    }
                  }
                },
                "location-request-message": {
                  "summary": "Location Request Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "interactive",
                    "to": 821089791169,
                    "interactive": {
                      "type": "location_request_message",
                      "body": {
                        "text": "Let us start with your pickup. You can either manually *enter an address* or *share your current location*."
                      },
                      "action": {
                        "name": "send_location"
                      }
                    }
                  }
                },
                "mark-as-read": {
                  "summary": "Mark Message as Read Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "status": "read",
                    "message_id": "wamid.HBgLMTY0NjcwNDM1OTUVAgARGBI1RjQyNUE3NEYxMzAzMzQ5MkEA"
                  }
                },
                "typing-indicator": {
                  "summary": "Typing Indicator Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "status": "read",
                    "message_id": "wamid.HBgLMTY1MDM4Nzk0MzkVAgARGBJDQjZCMzlEQUE4OTJBMTE4RTUA",
                    "typing_indicator": {
                      "type": "text"
                    }
                  }
                },
                "reaction-message": {
                  "summary": "Reaction Message Example",
                  "value": {
                    "messaging_product": "whatsapp",
                    "type": "reaction",
                    "to": 821089791169,
                    "reaction": {
                      "message_id": "wamid.HBgLMTY0NjcwNDM1OTUVAgASGBQzQUZCMTY0MDc2MUYwNzBDNTY5MAA=",
                      "emoji": "😀"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{wabaId}/phone_numbers": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Get all phone numbers",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wabaId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the WhatsApp Business Account"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved phone numbers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumbersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{businessNumberId}": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Get details for the specified phone number",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business phone number"
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to retrieve",
            "example": "id,account_mode,certificate,code_verification_status,display_phone_number,health_status,quality_score,throughput"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved phone number details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "404": {
            "description": "Phone number not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Set two-step verification PIN",
        "tags": [
          "Two-Step Verification"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business phone number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoStepVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully set two-step verification PIN",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{businessNumberId}/request_code": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Request verification code for phone number",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business phone number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully requested verification code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{businessNumberId}/verify_code": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Verify code for phone number",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business phone number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully verified code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{businessNumberId}/qr-codes": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Get all QR codes",
        "tags": [
          "QR Codes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the WhatsApp Business phone number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved QR codes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrCodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Create a new QR code",
        "tags": [
          "QR Codes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the WhatsApp Business phone number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prefilled_message": {
                    "type": "string",
                    "description": "Message to be pre-filled when the QR code is scanned"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created QR code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrCodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{businessNumberId}/qr-codes/{qrCodeId}": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Get a specific QR code by ID",
        "tags": [
          "QR Codes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the WhatsApp Business phone number"
          },
          {
            "in": "path",
            "name": "qrCodeId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the QR code"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved QR code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrCodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "404": {
            "description": "QR code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Update a QR code",
        "tags": [
          "QR Codes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the WhatsApp Business phone number"
          },
          {
            "in": "path",
            "name": "qrCodeId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the QR code to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prefilled_message": {
                    "type": "string",
                    "description": "New message to be pre-filled when the QR code is scanned"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated QR code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "404": {
            "description": "QR code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Delete a QR code",
        "tags": [
          "QR Codes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the WhatsApp Business phone number"
          },
          {
            "in": "path",
            "name": "qrCodeId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the QR code to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted QR code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "404": {
            "description": "QR code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{businessNumberId}/register": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Register a phone number",
        "tags": [
          "Registration"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business phone number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "pin"
                ],
                "properties": {
                  "pin": {
                    "type": "string"
                  },
                  "data_localization_region": {
                    "$ref": "#/components/schemas/DataLocalizationRegionEnum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully registered phone number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{businessNumberId}/deregister": {
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Deregister a phone number",
        "tags": [
          "Registration"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessNumberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business phone number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deregistered phone number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    },
    "/{templateId}": {
      "get": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          }
        ],
        "summary": "Get a specific template by ID",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the template to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Template details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "404": {
            "description": "Template not found"
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          }
        ],
        "summary": "Update an existing template",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the template to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "id": {
                      "type": "string",
                      "example": "9533679340021041"
                    },
                    "name": {
                      "type": "string",
                      "example": "seasonal_promotion12"
                    },
                    "category": {
                      "$ref": "#/components/schemas/CategoryEnum"
                    }
                  },
                  "required": [
                    "success",
                    "id",
                    "name",
                    "category"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "404": {
            "description": "Template not found"
          }
        }
      }
    },
    "/{wabaId}/message_templates": {
      "get": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "summary": "Get a list of templates",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wabaId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The WhatsApp Business Account ID"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of templates to return"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by template name"
          },
          {
            "in": "query",
            "name": "language",
            "schema": {
              "$ref": "#/components/schemas/LanguagesEnum"
            },
            "description": "Filter by language"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "$ref": "#/components/schemas/CategoryEnum"
            },
            "description": "Filter by category"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/TemplateStatusEnum"
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of templates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "summary": "Create a new template",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wabaId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The WhatsApp Business Account ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "category"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "9533679340021041"
                    },
                    "status": {
                      "$ref": "#/components/schemas/TemplateStatusEnum",
                      "example": "APPROVED"
                    },
                    "category": {
                      "$ref": "#/components/schemas/CategoryEnum",
                      "example": "MARKETING"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "AccessToken": []
          },
          {
            "PhoneNumberId": []
          },
          {
            "BusinessAccountId": []
          }
        ],
        "summary": "Delete a template",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wabaId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The WhatsApp Business Account ID"
          },
          {
            "in": "query",
            "name": "hsm_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the template to delete"
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the template to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Template deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "404": {
            "description": "Template not found"
          }
        }
      }
    },
    "/{wabaId}/subscribed_apps": {
      "get": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Get all WABA subscriptions",
        "tags": [
          "WABA"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wabaId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business account"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved WABA subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WabaSubscriptions"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Subscribe to WABA or override webhook if override_callback_uri and verify_token provided",
        "tags": [
          "WABA"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wabaId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business account"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "override_callback_uri": {
                    "type": "string",
                    "description": "The webhook URL. If provided with verify_token, acts as webhook override"
                  },
                  "verify_token": {
                    "type": "string",
                    "description": "The verification token for the webhook. Required if override_callback_uri provided"
                  }
                }
              },
              "examples": {
                "subscription": {
                  "summary": "Simple subscription",
                  "value": {}
                },
                "webhookOverride": {
                  "summary": "Subscribe with webhook override",
                  "value": {
                    "override_callback_uri": "https://example.com/webhook",
                    "verify_token": "your_verify_token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully subscribed to WABA or overrode webhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "AccessToken": []
          }
        ],
        "summary": "Unsubscribe from WABA",
        "tags": [
          "WABA"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wabaId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business account"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unsubscribed from WABA",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookError"
                }
              }
            }
          }
        }
      }
    }
  }
}